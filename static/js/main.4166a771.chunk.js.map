{"version":3,"sources":["api_credentials/credentials.js","store/recipes-slice.js","store/actions/recipes-actions.js","store/ui-slice.js","store/actions/ui-actions.js","store/actions/thunks/recipes-thunks.js","components/Header/RecipeSearchInput.js","components/Header/Header.js","components/UI/Card.js","components/UI/Badge.js","components/Recipes/RecipeListItem/FoodTypeMark.js","components/Recipes/RecipeListItem/RecipeListItem.js","components/Recipes/RecipesPagination.js","utils.js","components/Recipes/RecipesList.js","App.js","store/index.js","index.js"],"names":["credentials","API_KEY","APP_ID","API_PROVIDER","URL","undefined","recipesSlice","createSlice","name","initialState","searchQuery","nextPageLink","currentPage","totalPages","rawData","formattedRecipesList","reducers","addRawData","state","action","data","payload","push","updateCurrentPage","newPage","length","console","log","currentRawData","hits","map","currItem","ind","recipe","label","image","healthLabels","totalTime","dietLabels","cuisineType","dishType","mealType","calories","foodType","includes","labels","concat","toFixed","id","imgUrl","nextLink","_links","next","href","resetRecipesState","updateSearchQuery","recipesActions","actions","UISlice","isRecipesLoading","setRecipeLoadingState","isLoading","setErrorMessage","errorMessage","duration","setTimeout","UIActions","fetchRecipes","url","fire","a","fetch","response","ok","Error","json","forEach","hit","message","RecipeSearchInput","props","useDispatch","inputRef","useRef","searchHandler","event","preventDefault","targetURL","searchTerm","current","value","trim","onSubmit","ref","type","className","placeholder","Header","Card","isPadding","padding","children","Badge","FoodTypeMark","RecipeListItem","itemImgUrl","itemFoodType","itemLabels","itemIsLoading","recipeName","recipeTags","Math","random","style","backgroundImage","RecipesPagination","useSelector","recipes","isFirstPage","nextPageHandler","onClick","disabled","toTitle","sentence","split","word","toUpperCase","slice","capitalize","join","RecipesList","formattedRecipeList","recipeList","UI","item","App","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4166a771.chunk.js","sourcesContent":["const credentials = {\r\n\tAPI_KEY: 'f538ef86a5af1ee5712af9cfeaf4df92',\r\n\tAPP_ID: '542eed36',\r\n\tAPI_PROVIDER: 'api.edamam.com',\r\n\tURL: undefined,\r\n};\r\n\r\ncredentials.URL = `https://${credentials.API_PROVIDER}/api/recipes/v2?type=public&app_key=${credentials.API_KEY}&app_id=${credentials.APP_ID}`;\r\n\r\nexport default credentials;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport {\r\n\taddRawData,\r\n\tresetRecipesState,\r\n\tupdateCurrentPage,\r\n\tupdateSearchQuery,\r\n\t// updateNextPage,\r\n} from '../store/actions/recipes-actions';\r\n\r\nexport const initialRecipesState = {\r\n\tsearchQuery: false,\r\n\tnextPageLink: false,\r\n\tcurrentPage: 0,\r\n\ttotalPages: 0,\r\n\trawData: [\r\n\t\t// Store in pages\r\n\t],\r\n\tformattedRecipesList: [],\r\n};\r\n\r\nconst recipesSlice = createSlice({\r\n\tname: 'recipes',\r\n\tinitialState: initialRecipesState,\r\n\treducers: {\r\n\t\t// Synchronous Actions\r\n\t\taddRawData,\r\n\t\tupdateCurrentPage,\r\n\t\tresetRecipesState,\r\n\t\tupdateSearchQuery,\r\n\t\t// updateNextPage,\r\n\t},\r\n});\r\n\r\nexport const recipesActions = recipesSlice.actions;\r\n\r\nexport default recipesSlice;\r\n","export const addRawData = (state, action) => {\r\n\tconst data = action.payload.data;\r\n\tstate.rawData.push(data);\r\n\tstate.totalPages += 1;\r\n};\r\n\r\nexport const updateSearchQuery = (state, action) => {\r\n\tstate.searchQuery = action.payload.searchQuery;\r\n};\r\n\r\nexport const resetRecipesState = (state) => {\r\n\tstate.searchQuery = false;\r\n\tstate.nextPageLink = false;\r\n\tstate.currentPage = 0;\r\n\tstate.totalPages = 0;\r\n\tstate.rawData = [];\r\n\tstate.formattedRecipesList = [];\r\n};\r\n\r\nexport const updateCurrentPage = (state, action) => {\r\n\tconst newPage = action.payload.newPage;\r\n\tstate.currentPage = newPage;\r\n\tif (!state.rawData.length || !newPage) {\r\n\t\treturn console.log('No data to update');\r\n\t}\r\n\r\n\t// Updating the formatted list\r\n\tconst currentRawData = state.rawData[newPage - 1];\r\n\tconst currentRawDataList = currentRawData.hits;\r\n\tconst formattedRecipesList = currentRawDataList.map((currItem, ind) => {\r\n\t\tconst {\r\n\t\t\tlabel,\r\n\t\t\timage,\r\n\t\t\thealthLabels,\r\n\t\t\ttotalTime,\r\n\t\t\tdietLabels,\r\n\t\t\tcuisineType,\r\n\t\t\tdishType,\r\n\t\t\tmealType,\r\n\t\t\tcalories,\r\n\t\t} = currItem.recipe;\r\n\t\tlet foodType = 'loading';\r\n\t\tif (healthLabels.includes('Vegetarian')) {\r\n\t\t\tfoodType = 'veg';\r\n\t\t} else if (\r\n\t\t\thealthLabels.includes('Egg-Free') &&\r\n\t\t\t!healthLabels.includes('Vegetarian')\r\n\t\t) {\r\n\t\t\tfoodType = 'non-veg';\r\n\t\t} else if (!healthLabels.includes('Egg-Free')) {\r\n\t\t\tfoodType = 'egg';\r\n\t\t}\r\n\r\n\t\tlet labels = [];\r\n\t\tif (totalTime) {\r\n\t\t\tlabels.push(`${totalTime} mins`);\r\n\t\t}\r\n\t\tlabels = labels\r\n\t\t\t.concat(cuisineType || [])\r\n\t\t\t.concat(dishType || [])\r\n\t\t\t.concat(mealType || [])\r\n\t\t\t.concat(dietLabels || []);\r\n\t\tif (calories) {\r\n\t\t\tlabels.push(`${calories.toFixed(0)} cal`);\r\n\t\t}\r\n\t\treturn {\r\n\t\t\tid: `${ind}`,\r\n\t\t\tname: label,\r\n\t\t\timgUrl: image,\r\n\t\t\tlabels,\r\n\t\t\tfoodType,\r\n\t\t};\r\n\t});\r\n\tstate.formattedRecipesList = formattedRecipesList;\r\n\r\n\t// Update the nextPageLink\r\n\tconst nextLink = currentRawData._links.next || { href: false };\r\n\tstate.nextPageLink = nextLink.href;\r\n};\r\n\r\n// export const updateNextPage = (state) => {\r\n// \tconst currentPageData = state.rawData[state.currentPage - 1];\r\n// \tstate.nextPageLink = currentPageData._links.next || false;\r\n// };\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport { setRecipeLoadingState, setErrorMessage } from './actions/ui-actions';\r\n\r\nconst initialUIState = {\r\n\tisRecipesLoading: false,\r\n};\r\n\r\nconst UISlice = createSlice({\r\n\tname: 'UI',\r\n\tinitialState: initialUIState,\r\n\treducers: {\r\n\t\t// Synchronous Actions\r\n\t\tsetRecipeLoadingState,\r\n\t\tsetErrorMessage,\r\n\t\t// -------------------\r\n\t\t// Asynchronous Actions\r\n\t},\r\n});\r\n\r\nexport const UIActions = UISlice.actions;\r\n\r\nexport default UISlice;\r\n","export const setRecipeLoadingState = (state, action) => {\r\n\tconst isLoading = action.payload.isLoading;\r\n\tstate.isRecipesLoading = isLoading;\r\n};\r\n\r\nexport const setErrorMessage = (state, action) => {\r\n\tconst { errorMessage, duration } = action.payload.errorMessage;\r\n\tstate.errorMessage = errorMessage;\r\n\tsetTimeout(() => {\r\n\t\tstate.errorMessage = '';\r\n\t}, duration);\r\n};\r\n","import { recipesActions } from '../../recipes-slice';\r\nimport { UIActions } from '../../ui-slice';\r\n\r\nexport const fetchRecipes = (url) => {\r\n\treturn async (fire) => {\r\n\t\tfire(UIActions.setRecipeLoadingState({ isLoading: true }));\r\n\t\t// console.log(url);\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(url);\r\n\t\t\tif (!response.ok) {\r\n\t\t\t\tthrow new Error('Something went wrong');\r\n\t\t\t}\r\n\t\t\tconst data = await response.json();\r\n\r\n\t\t\t// console.log(data);\r\n\t\t\t// Remove unnecessary data\r\n\t\t\tdata.hits.forEach((hit) => {\r\n\t\t\t\tconst {\r\n\t\t\t\t\tlabel,\r\n\t\t\t\t\timage,\r\n\t\t\t\t\thealthLabels,\r\n\t\t\t\t\ttotalTime,\r\n\t\t\t\t\tdietLabels,\r\n\t\t\t\t\tcuisineType,\r\n\t\t\t\t\tdishType,\r\n\t\t\t\t\tmealType,\r\n\t\t\t\t\tcalories,\r\n\t\t\t\t} = hit.recipe;\r\n\t\t\t\thit.recipe = {\r\n\t\t\t\t\tlabel,\r\n\t\t\t\t\timage,\r\n\t\t\t\t\thealthLabels,\r\n\t\t\t\t\ttotalTime,\r\n\t\t\t\t\tdietLabels,\r\n\t\t\t\t\tcuisineType,\r\n\t\t\t\t\tdishType,\r\n\t\t\t\t\tmealType,\r\n\t\t\t\t\tcalories,\r\n\t\t\t\t};\r\n\t\t\t});\r\n\t\t\t// Add it to raw data\r\n\t\t\tfire(recipesActions.addRawData({ data }));\r\n\r\n\t\t\tfire(UIActions.setRecipeLoadingState({ isLoading: false }));\r\n\t\t} catch (err) {\r\n\t\t\tfire(UIActions.setErrorMessage(err.message));\r\n\t\t\tfire(recipesActions.updateSearchQuery({ searchQuery: false }));\r\n\t\t}\r\n\t};\r\n};\r\n","import React, { useRef } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport credentials from '../../api_credentials/credentials';\r\nimport { fetchRecipes } from '../../store/actions/thunks/recipes-thunks';\r\nimport { recipesActions } from '../../store/recipes-slice';\r\n\r\nimport './RecipeSearchInput.css';\r\n\r\nfunction RecipeSearchInput(props) {\r\n\tconst fire = useDispatch();\r\n\tconst inputRef = useRef();\r\n\r\n\tconst searchHandler = async (event) => {\r\n\t\tevent.preventDefault();\r\n\r\n\t\tconst targetURL = credentials.URL;\r\n\t\tconst searchTerm = inputRef.current.value.trim();\r\n\r\n\t\tinputRef.current.value = '';\r\n\r\n\t\tif (!searchTerm) {\r\n\t\t\treturn console.log('Enter a valid query');\r\n\t\t}\r\n\r\n\t\t// Clear recipe state first, for new search query\r\n\t\tfire(recipesActions.resetRecipesState());\r\n\r\n\t\t// Update search query\r\n\t\tfire(recipesActions.updateSearchQuery({ searchQuery: searchTerm }));\r\n\r\n\t\t// Fetch the query result (first page)\r\n\t\tawait fire(fetchRecipes(`${targetURL}&q=${searchTerm}`));\r\n\r\n\t\t// Finally update the current page to show the correct recipes\r\n\t\tfire(recipesActions.updateCurrentPage({ newPage: 1 }));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<form onSubmit={searchHandler}>\r\n\t\t\t<input\r\n\t\t\t\tref={inputRef}\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tclassName=\"search-input\"\r\n\t\t\t\tplaceholder=\"Search...\"\r\n\t\t\t/>\r\n\t\t\t<button className=\"search-input-btn\" type=\"submit\">\r\n\t\t\t\t<i className=\"fa fa-search\"></i>\r\n\t\t\t</button>\r\n\t\t</form>\r\n\t);\r\n}\r\n\r\nexport default RecipeSearchInput;\r\n","import React from 'react';\r\n\r\nimport RecipeSearchInput from './RecipeSearchInput';\r\nimport './Header.css';\r\n\r\nfunction Header(props) {\r\n\treturn (\r\n\t\t<header className=\"header\">\r\n\t\t\t<h1 className=\"title\">Recipe Now</h1>\r\n\t\t\t<RecipeSearchInput />\r\n\t\t</header>\r\n\t);\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nimport './Card.css';\r\n\r\nfunction Card(props) {\r\n\tconst isPadding = props.padding;\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName={`card ${props.className} ${isPadding && 'with-padding'}`}\r\n\t\t>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Card;\r\n","import React from 'react';\r\n\r\nimport './Badge.css';\r\n\r\nfunction Badge(props) {\r\n\treturn <div className={`badge ${props.className}`}>{props.children}</div>;\r\n}\r\n\r\nexport default Badge;\r\n","import React from 'react';\r\n\r\nimport './FoodTypeMark.css';\r\n\r\nfunction FoodTypeMark(props) {\r\n\treturn (\r\n\t\t<div className={`food-type-mark ${props.foodType}`}>\r\n\t\t\t<div className=\"inner-circle\"></div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default FoodTypeMark;\r\n","import React, { Fragment } from 'react';\r\n\r\nimport Card from '../../UI/Card';\r\nimport Badge from '../../UI/Badge';\r\nimport FoodTypeMark from './FoodTypeMark';\r\nimport './RecipeListItem.css';\r\n\r\nfunction RecipeListItem(props) {\r\n\tconst {\r\n\t\timgUrl: itemImgUrl,\r\n\t\tfoodType: itemFoodType,\r\n\t\tlabels: itemLabels,\r\n\t\tisLoading: itemIsLoading,\r\n\t\tname: recipeName,\r\n\t} = props;\r\n\r\n\tlet recipeTags = [];\r\n\tif (itemLabels) {\r\n\t\trecipeTags = itemLabels.map((label) => (\r\n\t\t\t<Badge key={label + Math.random()} className=\"recipe-tag\">\r\n\t\t\t\t{label}\r\n\t\t\t</Badge>\r\n\t\t));\r\n\t}\r\n\treturn (\r\n\t\t<Card className=\"recipe-list-item\">\r\n\t\t\t<div\r\n\t\t\t\tclassName={`loader ${\r\n\t\t\t\t\t!itemIsLoading ? 'recipe-list-item__img' : 'img_loader'\r\n\t\t\t\t}`}\r\n\t\t\t\tstyle={\r\n\t\t\t\t\t!itemIsLoading\r\n\t\t\t\t\t\t? { backgroundImage: `url(${itemImgUrl})` }\r\n\t\t\t\t\t\t: {}\r\n\t\t\t\t}\r\n\t\t\t></div>\r\n\t\t\t<div className=\"recipe-list-item-details\">\r\n\t\t\t\t{itemIsLoading ? (\r\n\t\t\t\t\t<Fragment>\r\n\t\t\t\t\t\t<div className=\"loader recipe-name-loader\"></div>\r\n\t\t\t\t\t\t<div className=\"recipe-list-item__tags-container\">\r\n\t\t\t\t\t\t\t<div className=\"loader recipe-tag-loader tag-1\"></div>\r\n\t\t\t\t\t\t\t<div className=\"loader recipe-tag-loader tag-2\"></div>\r\n\t\t\t\t\t\t\t<div className=\"loader recipe-tag-loader tag-3\"></div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Fragment>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<Fragment>\r\n\t\t\t\t\t\t<p className=\"recipe-list-item__title\">{recipeName}</p>\r\n\t\t\t\t\t\t{recipeTags.length !== 0 && (\r\n\t\t\t\t\t\t\t<div className=\"recipe-list-item__tags-container\">\r\n\t\t\t\t\t\t\t\t{recipeTags}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Fragment>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t\t<FoodTypeMark\r\n\t\t\t\tclassName=\"loader\"\r\n\t\t\t\tfoodType={!itemIsLoading ? itemFoodType : 'loading'}\r\n\t\t\t/>\r\n\t\t</Card>\r\n\t);\r\n}\r\n\r\nexport default RecipeListItem;\r\n","import React from 'react';\r\n\r\nimport './RecipesPagination.css';\r\nimport Badge from '../UI/Badge';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { recipesActions } from '../../store/recipes-slice';\r\nimport { fetchRecipes } from '../../store/actions/thunks/recipes-thunks';\r\n\r\nfunction RecipesPagination(props) {\r\n\tconst fire = useDispatch();\r\n\r\n\tconst { currentPage, totalPages, nextPageLink } = useSelector(\r\n\t\t(state) => state.recipes\r\n\t);\r\n\tconst isFirstPage = currentPage === 1;\r\n\r\n\t// fire(recipesActions.updateNextPage());\r\n\r\n\tconst nextPageHandler = async () => {\r\n\t\tif (currentPage >= totalPages) {\r\n\t\t\tawait fire(fetchRecipes(nextPageLink));\r\n\t\t}\r\n\t\tfire(recipesActions.updateCurrentPage({ newPage: currentPage + 1 }));\r\n\t};\r\n\r\n\tconst prevPageHandler = () => {\r\n\t\tif (currentPage === 1) {\r\n\t\t\treturn console.log('Invalid request');\r\n\t\t}\r\n\t\tfire(recipesActions.updateCurrentPage({ newPage: currentPage - 1 }));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"recipes-pagination\">\r\n\t\t\t<button\r\n\t\t\t\tonClick={prevPageHandler}\r\n\t\t\t\tdisabled={isFirstPage}\r\n\t\t\t\tclassName=\"pagination-button badge\"\r\n\t\t\t>\r\n\t\t\t\tPrev\r\n\t\t\t</button>\r\n\t\t\t<Badge>Page {currentPage}</Badge>\r\n\t\t\t<button\r\n\t\t\t\tonClick={nextPageHandler}\r\n\t\t\t\tdisabled={!nextPageLink}\r\n\t\t\t\tclassName=\"pagination-button badge\"\r\n\t\t\t>\r\n\t\t\t\tNext\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default RecipesPagination;\r\n","export const capitalize = (sentence) => {\r\n\treturn sentence[0].toUpperCase() + sentence.slice(1);\r\n};\r\n\r\nexport const toTitle = (sentence) =>\r\n\tsentence\r\n\t\t.trim()\r\n\t\t.split(' ')\r\n\t\t.map((word) => capitalize(word))\r\n\t\t.join(' ');\r\n","import React, { Fragment } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport RecipesListItem from './RecipeListItem/RecipeListItem';\r\nimport RecipesPagination from './RecipesPagination';\r\n\r\nimport './RecipesList.css';\r\nimport { toTitle } from '../../utils';\r\n\r\nfunction RecipesList(props) {\r\n\tconst recipeList = useSelector(\r\n\t\t(state) => state.recipes.formattedRecipesList\r\n\t);\r\n\tconst searchQuery = useSelector((state) => state.recipes.searchQuery);\r\n\tconst isLoading = useSelector((state) => state.UI.isRecipesLoading);\r\n\r\n\t// const isFirstPage = fire(recipesActions.getIsFirstPage());\r\n\r\n\tlet formattedRecipeList;\r\n\tif (isLoading) {\r\n\t\tformattedRecipeList = [];\r\n\t\tfor (let ind = 0; ind < 8; ind++) {\r\n\t\t\tformattedRecipeList.push(\r\n\t\t\t\t<RecipesListItem isLoading={true} key={ind} />\r\n\t\t\t);\r\n\t\t}\r\n\t} else {\r\n\t\tformattedRecipeList = recipeList.map((item) => (\r\n\t\t\t<RecipesListItem isLoading={false} key={item.id} {...item} />\r\n\t\t));\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t{searchQuery && (\r\n\t\t\t\t<center>\r\n\t\t\t\t\t{isLoading ? (\r\n\t\t\t\t\t\t<h1 className={isLoading && 'dot-loading'}>\r\n\t\t\t\t\t\t\tSearching for {toTitle(searchQuery)}\r\n\t\t\t\t\t\t</h1>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<h1>Results for {toTitle(searchQuery)}</h1>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</center>\r\n\t\t\t)}\r\n\r\n\t\t\t<div className={`recipes-list ${isLoading && 'loading'}`}>\r\n\t\t\t\t{searchQuery && formattedRecipeList}\r\n\t\t\t</div>\r\n\t\t\t{searchQuery && <RecipesPagination />}\r\n\t\t</Fragment>\r\n\t);\r\n}\r\n\r\nexport default RecipesList;\r\n","import { Fragment } from 'react';\r\n\r\nimport Header from './components/Header/Header';\r\nimport RecipesList from './components/Recipes/RecipesList';\r\n\r\nfunction App() {\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<Header />\r\n\t\t\t<RecipesList />\r\n\t\t</Fragment>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport recipesSlice from './recipes-slice';\r\nimport UISlice from './ui-slice';\r\n\r\nconst store = configureStore({\r\n\treducer: {\r\n\t\trecipes: recipesSlice.reducer,\r\n\t\tUI: UISlice.reducer,\r\n\t},\r\n});\r\n\r\nexport default store;\r\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport App from './App';\nimport store from './store';\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}