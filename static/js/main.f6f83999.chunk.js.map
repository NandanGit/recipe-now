{"version":3,"sources":["api_credentials/credentials.js","store/recipes-slice.js","store/actions/recipes-actions.js","store/ui-slice.js","store/actions/ui-actions.js","store/actions/thunks/recipes-thunks.js","components/Header/RecipeSearchInput.js","components/Header/Header.js","components/UI/Card.js","components/UI/Badge.js","components/Recipes/RecipeListItem/FoodTypeMark.js","components/Recipes/RecipeListItem/RecipeListItem.js","components/Recipes/RecipesList.js","App.js","store/index.js","index.js"],"names":["credentials","API_KEY","APP_ID","API_PROVIDER","URL","undefined","recipesSlice","createSlice","name","initialState","currentPage","totalPages","rawData","formattedRecipesList","id","imgUrl","foodType","labels","reducers","addRawData","state","action","data","payload","push","updateCurrentPage","newPage","updateFormattedRecipesList","hits","map","currItem","ind","recipe","label","image","healthLabels","totalTime","dietLabels","cuisineType","dishType","mealType","calories","includes","concat","toFixed","clearRawData","recipesActions","actions","UISlice","isBeginning","isRecipesLoading","setRecipeLoadingState","isLoading","setErrorMessage","errorMessage","duration","setTimeout","updateBeginningState","UIActions","fetchRecipes","url","fire","a","fetch","response","ok","Error","json","message","RecipeSearchInput","props","useDispatch","inputRef","useRef","searchHandler","event","preventDefault","targetURL","searchTerm","current","value","trim","onSubmit","ref","type","className","placeholder","Header","Card","isPadding","padding","children","Badge","FoodTypeMark","RecipeListItem","itemImgUrl","itemFoodType","itemLabels","itemIsLoading","recipeName","recipeTags","Math","random","style","backgroundImage","length","RecipesList","formattedRecipeList","recipeList","useSelector","recipes","UI","item","App","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f6f83999.chunk.js","sourcesContent":["const credentials = {\r\n\tAPI_KEY: 'f538ef86a5af1ee5712af9cfeaf4df92',\r\n\tAPP_ID: '542eed36',\r\n\tAPI_PROVIDER: 'api.edamam.com',\r\n\tURL: undefined,\r\n};\r\n\r\ncredentials.URL = `https://${credentials.API_PROVIDER}/api/recipes/v2?type=public&app_key=${credentials.API_KEY}&app_id=${credentials.APP_ID}`;\r\n\r\nexport default credentials;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport {\r\n\taddRawData,\r\n\tupdateCurrentPage,\r\n\tupdateFormattedRecipesList,\r\n\tclearRawData,\r\n} from '../store/actions/recipes-actions';\r\n\r\nconst initialRecipesState = {\r\n\tcurrentPage: 0,\r\n\ttotalPages: 0,\r\n\trawData: [\r\n\t\t// Store in pages\r\n\t],\r\n\tformattedRecipesList: [\r\n\t\t// Contains only the recipes in the current page\r\n\t\t{\r\n\t\t\tid: 0,\r\n\t\t\tname: 'Tomato Salad Grilled Pizza',\r\n\t\t\timgUrl: 'https://www.edamam.com/web-img/28a/28ac183a985155b5593483a198acf16f.png',\r\n\t\t\tfoodType: 'veg',\r\n\t\t\tlabels: ['Indian', '10 min', 'Balanced', 'Protein Rich'],\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 1,\r\n\t\t\tname: 'Tomato Salad Grilled Pizza',\r\n\t\t\timgUrl: 'https://www.edamam.com/web-img/80a/80a19d1ad6a0c42e0422e380ef9e194c.jpg',\r\n\t\t\tfoodType: 'non-veg',\r\n\t\t\tlabels: ['Italian', '60 min', 'High Carbs'],\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 2,\r\n\t\t\tname: 'Tomato Salad Grilled Pizza',\r\n\t\t\timgUrl: 'https://www.edamam.com/web-img/855/85556f2d7a304d97c6767e4600c588d4.jpg',\r\n\t\t\tfoodType: 'non-veg',\r\n\t\t\tlabels: ['Gluten free', 'Sodium', 'Iron'],\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 3,\r\n\t\t\tname: 'Tomato Salad Grilled Pizza',\r\n\t\t\timgUrl: 'https://www.edamam.com/web-img/52e/52ebe8eb9f3fb204c6fd12403d3ed09e.jpg',\r\n\t\t\tfoodType: 'egg',\r\n\t\t\tlabels: ['Spicy', '10 min', 'Balanced', 'Protein Rich'],\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 4,\r\n\t\t\tname: 'Tomato Salad Grilled Pizza',\r\n\t\t\timgUrl: 'https://www.edamam.com/web-img/b7e/b7ef79d492fd308c920a9f5b2f4ab064.jpg',\r\n\t\t\tfoodType: 'egg',\r\n\t\t\tlabels: ['Organic', '10 min', 'No preservatives', 'Protein Rich'],\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 5,\r\n\t\t\tname: 'Tomato Salad Grilled Pizza',\r\n\t\t\timgUrl: 'https://www.edamam.com/web-img/36c/36cb2c544928c75d950c08d62e9f7e56.jpg',\r\n\t\t\tfoodType: 'veg',\r\n\t\t\tlabels: ['Indian', '10 min', 'Balanced', 'Protein Rich'],\r\n\t\t},\r\n\t],\r\n};\r\n\r\nconst recipesSlice = createSlice({\r\n\tname: 'recipes',\r\n\tinitialState: initialRecipesState,\r\n\treducers: {\r\n\t\t// Synchronous Actions\r\n\t\taddRawData,\r\n\t\tupdateCurrentPage,\r\n\t\tupdateFormattedRecipesList,\r\n\t\tclearRawData,\r\n\t\t// -------------------\r\n\t\t// Asynchronous Actions\r\n\t},\r\n});\r\n\r\nexport const recipesActions = recipesSlice.actions;\r\n\r\nexport default recipesSlice;\r\n","export const addRawData = (state, action) => {\r\n\tconst data = action.payload.data;\r\n\tstate.rawData.push(data);\r\n\tstate.totalPages += 1;\r\n};\r\n\r\nexport const clearRawData = (state) => {\r\n\tstate.rawData = [];\r\n};\r\n\r\nexport const updateFormattedRecipesList = (state) => {\r\n\tconst currentRawDataList = state.rawData[state.currentPage - 1].hits;\r\n\tconst formattedRecipesList = currentRawDataList.map((currItem, ind) => {\r\n\t\tconst {\r\n\t\t\tlabel,\r\n\t\t\timage,\r\n\t\t\thealthLabels,\r\n\t\t\ttotalTime,\r\n\t\t\tdietLabels,\r\n\t\t\tcuisineType,\r\n\t\t\tdishType,\r\n\t\t\tmealType,\r\n\t\t\tcalories,\r\n\t\t} = currItem.recipe;\r\n\t\tlet foodType = 'loading';\r\n\t\tif (healthLabels.includes('Vegetarian')) {\r\n\t\t\tfoodType = 'veg';\r\n\t\t} else if (\r\n\t\t\thealthLabels.includes('Egg-Free') &&\r\n\t\t\t!healthLabels.includes('Vegetarian')\r\n\t\t) {\r\n\t\t\tfoodType = 'non-veg';\r\n\t\t} else if (!healthLabels.includes('Egg-Free')) {\r\n\t\t\tfoodType = 'egg';\r\n\t\t}\r\n\r\n\t\tlet labels = [];\r\n\t\tif (totalTime) {\r\n\t\t\tlabels.push(`${totalTime} mins`);\r\n\t\t}\r\n\t\t// if (cuisineType) {\r\n\t\t// \tlabels = labels.concat(cuisineType);\r\n\t\t// }\r\n\t\t// if (dishType) {\r\n\t\t// \tlabels = labels.concat(dishType);\r\n\t\t// }\r\n\t\t// if (mealType) {\r\n\t\t// \tlabels = labels.concat(mealType);\r\n\t\t// }\r\n\t\t// if (dietLabels) {\r\n\t\t// \tlabels = labels.concat(dietLabels);\r\n\t\t// }\r\n\t\tlabels = labels\r\n\t\t\t.concat(cuisineType || [])\r\n\t\t\t.concat(dishType || [])\r\n\t\t\t.concat(mealType || [])\r\n\t\t\t.concat(dietLabels || []);\r\n\t\tif (calories) {\r\n\t\t\tlabels.push(`${calories.toFixed(0)} cal`);\r\n\t\t}\r\n\t\treturn {\r\n\t\t\tid: `${ind}`,\r\n\t\t\tname: label,\r\n\t\t\timgUrl: image,\r\n\t\t\tlabels,\r\n\t\t\tfoodType,\r\n\t\t};\r\n\t});\r\n\tstate.formattedRecipesList = formattedRecipesList;\r\n};\r\n\r\nexport const updateCurrentPage = (state, action) => {\r\n\tconst newPage = action.payload.newPage;\r\n\tstate.currentPage = newPage;\r\n};\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport {\r\n\tsetRecipeLoadingState,\r\n\tsetErrorMessage,\r\n\tupdateBeginningState,\r\n} from './actions/ui-actions';\r\n\r\nconst initialUIState = {\r\n\tisBeginning: true,\r\n\tisRecipesLoading: false,\r\n};\r\n\r\nconst UISlice = createSlice({\r\n\tname: 'UI',\r\n\tinitialState: initialUIState,\r\n\treducers: {\r\n\t\t// Synchronous Actions\r\n\t\tsetRecipeLoadingState,\r\n\t\tsetErrorMessage,\r\n\t\tupdateBeginningState,\r\n\t\t// -------------------\r\n\t\t// Asynchronous Actions\r\n\t},\r\n});\r\n\r\nexport const UIActions = UISlice.actions;\r\n\r\nexport default UISlice;\r\n","export const setRecipeLoadingState = (state, action) => {\r\n\tconst isLoading = action.payload.isLoading;\r\n\tstate.isRecipesLoading = isLoading;\r\n};\r\n\r\nexport const updateBeginningState = (state) => {\r\n\tstate.isBeginning = false;\r\n};\r\n\r\nexport const setErrorMessage = (state, action) => {\r\n\tconst { errorMessage, duration } = action.payload.errorMessage;\r\n\tstate.errorMessage = errorMessage;\r\n\tsetTimeout(() => {\r\n\t\tstate.errorMessage = '';\r\n\t}, duration);\r\n};\r\n","import { recipesActions } from '../../recipes-slice';\r\nimport { UIActions } from '../../ui-slice';\r\n\r\nexport const fetchRecipes = (url) => {\r\n\treturn async (fire) => {\r\n\t\tfire(UIActions.setRecipeLoadingState({ isLoading: true }));\r\n\t\t// console.log(url);\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(url);\r\n\t\t\tif (!response.ok) {\r\n\t\t\t\tthrow new Error('Something went wrong');\r\n\t\t\t}\r\n\t\t\tconst data = await response.json();\r\n\r\n\t\t\t// Process data\r\n\t\t\t// console.log(data.hits);\r\n\t\t\tfire(UIActions.setRecipeLoadingState({ isLoading: false }));\r\n\t\t\t// Add it to raw data\r\n\t\t\tfire(recipesActions.addRawData({ data }));\r\n\t\t} catch (err) {\r\n\t\t\tfire(UIActions.setErrorMessage(err.message));\r\n\t\t}\r\n\t};\r\n};\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport credentials from '../../api_credentials/credentials';\r\nimport { fetchRecipes } from '../../store/actions/thunks/recipes-thunks';\r\nimport { recipesActions } from '../../store/recipes-slice';\r\nimport { UIActions } from '../../store/ui-slice';\r\n\r\nimport './RecipeSearchInput.css';\r\n\r\nfunction RecipeSearchInput(props) {\r\n\tconst fire = useDispatch();\r\n\tconst inputRef = useRef();\r\n\r\n\tconst searchHandler = async (event) => {\r\n\t\tevent.preventDefault();\r\n\r\n\t\tfire(recipesActions.updateCurrentPage(0));\r\n\t\tfire(recipesActions.clearRawData());\r\n\r\n\t\tconst targetURL = credentials.URL;\r\n\t\tconst searchTerm = inputRef.current.value.trim();\r\n\r\n\t\tfire(UIActions.updateBeginningState());\r\n\t\tfire(recipesActions.updateCurrentPage({ newPage: 1 }));\r\n\t\tawait fire(fetchRecipes(`${targetURL}&q=${searchTerm}`));\r\n\r\n\t\tfire(recipesActions.updateFormattedRecipesList());\r\n\t\t// setTimeout(() => {\r\n\t\t// \t// setIsLoading(false);\r\n\t\t// \tfire(UIActions.setRecipeLoadingState({ isLoading: false }));\r\n\t\t// }, 3000);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<form onSubmit={searchHandler}>\r\n\t\t\t<input\r\n\t\t\t\tref={inputRef}\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tclassName=\"search-input\"\r\n\t\t\t\tplaceholder=\"Search...\"\r\n\t\t\t/>\r\n\t\t\t<button className=\"search-input-btn\" type=\"submit\">\r\n\t\t\t\t<i className=\"fa fa-search\"></i>\r\n\t\t\t</button>\r\n\t\t</form>\r\n\t);\r\n}\r\n\r\nexport default RecipeSearchInput;\r\n","import React from 'react';\r\n\r\nimport RecipeSearchInput from './RecipeSearchInput';\r\nimport './Header.css';\r\n\r\nfunction Header(props) {\r\n\treturn (\r\n\t\t<header className=\"header\">\r\n\t\t\t<h1 className=\"title\">Recipe Now</h1>\r\n\t\t\t<RecipeSearchInput />\r\n\t\t</header>\r\n\t);\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nimport './Card.css';\r\n\r\nfunction Card(props) {\r\n\tconst isPadding = props.padding;\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName={`card ${props.className} ${isPadding && 'with-padding'}`}\r\n\t\t>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Card;\r\n","import React from 'react';\r\n\r\nimport './Badge.css';\r\n\r\nfunction Badge(props) {\r\n\treturn <div className={`badge ${props.className}`}>{props.children}</div>;\r\n}\r\n\r\nexport default Badge;\r\n","import React from 'react';\r\n\r\nimport './FoodTypeMark.css';\r\n\r\nfunction FoodTypeMark(props) {\r\n\treturn (\r\n\t\t<div className={`food-type-mark ${props.foodType}`}>\r\n\t\t\t<div className=\"inner-circle\"></div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default FoodTypeMark;\r\n","import React, { Fragment } from 'react';\r\n\r\nimport Card from '../../UI/Card';\r\nimport Badge from '../../UI/Badge';\r\nimport FoodTypeMark from './FoodTypeMark';\r\nimport './RecipeListItem.css';\r\n\r\nfunction RecipeListItem(props) {\r\n\tconst {\r\n\t\timgUrl: itemImgUrl,\r\n\t\tfoodType: itemFoodType,\r\n\t\tlabels: itemLabels,\r\n\t\tisLoading: itemIsLoading,\r\n\t\tname: recipeName,\r\n\t} = props;\r\n\r\n\tlet recipeTags = [];\r\n\tif (itemLabels) {\r\n\t\trecipeTags = itemLabels.map((label) => (\r\n\t\t\t<Badge key={label + Math.random()} className=\"recipe-tag\">\r\n\t\t\t\t{label}\r\n\t\t\t</Badge>\r\n\t\t));\r\n\t}\r\n\treturn (\r\n\t\t<Card className=\"recipe-list-item\">\r\n\t\t\t<div\r\n\t\t\t\tclassName={`loader ${\r\n\t\t\t\t\t!itemIsLoading ? 'recipe-list-item__img' : 'img_loader'\r\n\t\t\t\t}`}\r\n\t\t\t\tstyle={\r\n\t\t\t\t\t!itemIsLoading\r\n\t\t\t\t\t\t? { backgroundImage: `url(${itemImgUrl})` }\r\n\t\t\t\t\t\t: {}\r\n\t\t\t\t}\r\n\t\t\t></div>\r\n\t\t\t<div className=\"recipe-list-item-details\">\r\n\t\t\t\t{itemIsLoading ? (\r\n\t\t\t\t\t<Fragment>\r\n\t\t\t\t\t\t<div className=\"loader recipe-name-loader\"></div>\r\n\t\t\t\t\t\t<div className=\"recipe-list-item__tags-container\">\r\n\t\t\t\t\t\t\t<div className=\"loader recipe-tag-loader tag-1\"></div>\r\n\t\t\t\t\t\t\t<div className=\"loader recipe-tag-loader tag-2\"></div>\r\n\t\t\t\t\t\t\t<div className=\"loader recipe-tag-loader tag-3\"></div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Fragment>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<Fragment>\r\n\t\t\t\t\t\t<p className=\"recipe-list-item__title\">{recipeName}</p>\r\n\t\t\t\t\t\t{recipeTags.length !== 0 && (\r\n\t\t\t\t\t\t\t<div className=\"recipe-list-item__tags-container\">\r\n\t\t\t\t\t\t\t\t{recipeTags}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Fragment>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t\t<FoodTypeMark\r\n\t\t\t\tclassName=\"loader\"\r\n\t\t\t\tfoodType={!itemIsLoading ? itemFoodType : 'loading'}\r\n\t\t\t/>\r\n\t\t</Card>\r\n\t);\r\n}\r\n\r\nexport default RecipeListItem;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport RecipesListItem from './RecipeListItem/RecipeListItem';\r\n\r\nimport './RecipesList.css';\r\n\r\nfunction RecipesList(props) {\r\n\tconst recipeList = useSelector(\r\n\t\t(state) => state.recipes.formattedRecipesList\r\n\t);\r\n\tconst isBeginning = useSelector((state) => state.UI.isBeginning);\r\n\tconst isLoading = useSelector((state) => state.UI.isRecipesLoading);\r\n\r\n\tlet formattedRecipeList;\r\n\tif (isLoading) {\r\n\t\tformattedRecipeList = [];\r\n\t\tfor (let ind = 0; ind < 8; ind++) {\r\n\t\t\tformattedRecipeList.push(\r\n\t\t\t\t<RecipesListItem isLoading={true} key={ind} />\r\n\t\t\t);\r\n\t\t}\r\n\t} else {\r\n\t\tformattedRecipeList = recipeList.map((item) => (\r\n\t\t\t<RecipesListItem isLoading={false} key={item.id} {...item} />\r\n\t\t));\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={`recipes-list ${isLoading && 'loading'}`}>\r\n\t\t\t{!isBeginning && formattedRecipeList}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default RecipesList;\r\n","import { Fragment } from 'react';\r\n\r\nimport Header from './components/Header/Header';\r\nimport RecipesList from './components/Recipes/RecipesList';\r\n\r\nfunction App() {\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<Header />\r\n\t\t\t<RecipesList />\r\n\t\t</Fragment>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport recipesSlice from './recipes-slice';\r\nimport UISlice from './ui-slice';\r\n\r\nconst store = configureStore({\r\n\treducer: {\r\n\t\trecipes: recipesSlice.reducer,\r\n\t\tUI: UISlice.reducer,\r\n\t},\r\n});\r\n\r\nexport default store;\r\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport App from './App';\nimport store from './store';\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}